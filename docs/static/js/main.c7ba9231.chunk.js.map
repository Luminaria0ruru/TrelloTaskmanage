{"version":3,"sources":["Components/Common/Chip.tsx","Components/Dropdown/Dropdown.tsx","Components/Modal/Modal.tsx","Components/CustomInput/CustomInput.tsx","Components/Card/CardInfo/CardInfo.tsx","Components/Card/Card.tsx","Components/Board/Board.tsx","ApiMockData/dummyData.ts","Helper/APILayers.ts","Home/Dashboard.tsx","App.tsx","index.tsx"],"names":["Chip","props","item","_jsx","style","backgroundColor","color","children","text","Dropdown","dropdownRef","useRef","handleClick","event","_dropdownRef$current","current","contains","target","onClose","useEffect","document","addEventListener","removeEventListener","ref","className","concat","class","Modal","onClick","stopPropagation","CustomInput","displayClass","CardInfo","_cardValues$labels","card","boardId","updateCard","_useState","useState","_objectSpread","_useState2","_slicedToArray","cardValues","setCardValues","console","log","id","_jsxs","Type","defaultValue","title","placeholder","onSubmit","value","List","desc","Tag","labels","map","index","Card","onDragEnd","removeCard","onDragEnter","showDropdown","setShowDropdown","_useState3","_useState4","showModal","setShowModal","_Fragment","draggable","e","MoreHorizontal","AlignLeft","X","Board","_board$cards","_board$cards2","board","cards","length","ApiMockResponse","date","tasks","completed","LocalStorageKeyName","BoardAPI","_classCallCheck","_createClass","key","_fetchBoardList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","apiData","BoardList","_localStorage$getItem","localStorageData","wrap","_context","prev","next","localStorage","getItem","JSON","parse","_toConsumableArray","updateLocalStorageBoards","abrupt","stop","apply","arguments","fetchBoardList","_fetchBoardList2","_callee2","api","_context2","boards","setItem","stringify","Dashboard","setBoards","_fetchData","sent","fetchData","cardId","targetCard","setTargetCard","boardIndex","findIndex","tempBoardsList","cardIndex","splice","_boards$sourceBoardIn","_boards$sourceBoardIn2","sourceBoardIndex","sourceCardIndex","targetBoardIndex","sourceCard","_boards$sourceBoardIn3","_boards$sourceBoardIn4","removeBoard","App","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"6YAMe,SAASA,EAAKC,GAAmB,IACtCC,EAAUD,EAAVC,KACR,OACEC,cAAA,SAAOC,MAAO,CAAEC,gBAAiBH,EAAKI,MAAOA,MAAO,QAASC,SAC1DL,EAAKM,O,MCwBGC,MA9Bf,SAAkBR,GAChB,IAAMS,EAAmBC,mBAEnBC,EAAc,SAACC,GAAgB,IAADC,EAEhCJ,KACoB,QAApBI,EAACJ,EAAYK,eAAO,IAAAD,OAAA,EAAnBA,EAAqBE,SAASH,EAAMI,UACrChB,EAAMiB,SAENjB,EAAMiB,WAWV,OARAC,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAAST,GAE5B,WACLQ,SAASE,oBAAoB,QAASV,OAKxCT,cAAA,OACEoB,IAAKb,EACLc,UAAS,0BAAAC,OAA4BxB,EAAMyB,MAAQzB,EAAMyB,MAAQ,IAAKnB,SAErEN,EAAMM,Y,6CCTEoB,MAhBf,SAAe1B,GACb,OACEE,cAAA,OACEqB,UAAU,QACVI,QAAS,kBAAO3B,EAAMiB,QAAUjB,EAAMiB,UAAY,IAAIX,SAEtDJ,cAAA,OACEqB,UAAU,8BACVI,QAAS,SAACf,GAAK,OAAKA,EAAMgB,mBAAkBtB,SAE3CN,EAAMM,c,MCaAuB,MAjBf,SAAqB7B,GAA0B,IAE3CO,EAEEP,EAFFO,KACAuB,EACE9B,EADF8B,aAGF,OACE5B,cAAA,OAAKqB,UAAU,eAAcjB,SACzBJ,cAAA,KACEqB,UAAS,wBAAAC,OAA0BM,GAA8B,IAAKxB,SAErEC,O,MC0DIwB,MAjEf,SAAkB/B,GAAuB,IAADgC,EAC9Bf,EAAuCjB,EAAvCiB,QAASgB,EAA8BjC,EAA9BiC,KAAMC,EAAwBlC,EAAxBkC,QAASC,EAAenC,EAAfmC,WAAUC,EACNC,mBAAQC,YAAA,GACvCL,IACHM,EAAAC,YAAAJ,EAAA,GAFKK,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAkBhC,OANArB,qBAAU,WACRyB,QAAQC,IAAIV,GACRC,GAAYA,EAAWD,EAASO,EAAWI,GAAIJ,KAElD,CAACA,IAGFvC,cAACwB,EAAK,CAACT,QAASA,EAAQX,SACtBwC,eAAA,OAAKvB,UAAU,WAAUjB,SAAA,CACvBwC,eAAA,OAAKvB,UAAU,eAAcjB,SAAA,CAC3BwC,eAAA,OAAKvB,UAAU,qBAAoBjB,SAAA,CACjCJ,cAAC6C,IAAI,IACL7C,cAAA,KAAAI,SAAG,aAELJ,cAAC2B,EAAW,CACVmB,aAAcP,EAAWQ,MACzB1C,KAAMkC,EAAWQ,MACjBC,YAAY,cACZC,SA1BU,SAACC,GACnBV,EAAaJ,wBAAC,GAAKG,GAAU,IAAEQ,MAAOG,WA6BlCN,eAAA,OAAKvB,UAAU,eAAcjB,SAAA,CAC3BwC,eAAA,OAAKvB,UAAU,qBAAoBjB,SAAA,CACjCJ,cAACmD,IAAI,IACLnD,cAAA,KAAAI,SAAG,mBAELJ,cAAC2B,EAAW,CACVmB,aAAcP,EAAWa,KACzB/C,KAAMkC,EAAWa,MAAQ,GACzBJ,YAAY,oBACZC,SAnCS,SAACC,GAClBV,EAAaJ,wBAAC,GAAKG,GAAU,IAAEa,KAAMF,WAsCjCN,eAAA,OAAKvB,UAAU,eAAcjB,SAAA,CAC3BwC,eAAA,OAAKvB,UAAU,qBAAoBjB,SAAA,CACjCJ,cAACqD,IAAG,IACJrD,cAAA,KAAAI,SAAG,cAELJ,cAAA,OAAKqB,UAAU,sBAAqBjB,SAChB,QADgB0B,EACjCS,EAAWe,cAAM,IAAAxB,OAAA,EAAjBA,EAAmByB,KAAI,SAACxD,EAAMyD,GAAK,OAClCxD,cAACH,EAAI,CAAaE,KAAMA,GAAbyD,iBCqBVC,MA1Ef,SAAc3D,GAAmB,IACvBiC,EACNjC,EADMiC,KAAMC,EACZlC,EADYkC,QAAS0B,EACrB5D,EADqB4D,UAAWjC,EAChC3B,EADgC2B,QAAQkC,EACxC7D,EADwC6D,WAAWC,EACnD9D,EADmD8D,YAAa3B,EAChEnC,EADgEmC,WAE1DU,EAA4BZ,EAA5BY,GAAII,EAAwBhB,EAAxBgB,MAAOK,EAAiBrB,EAAjBqB,KAAME,EAAWvB,EAAXuB,OAAMpB,EACSC,oBAAS,GAAME,EAAAC,YAAAJ,EAAA,GAAhD2B,EAAYxB,EAAA,GAAEyB,EAAezB,EAAA,GAAA0B,EACF5B,oBAAS,GAAM6B,EAAA1B,YAAAyB,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAE9B,OACEpB,eAAAuB,WAAA,CAAA/D,SAAA,CACG6D,GACCjE,cAAC6B,EAAQ,CACPd,QAAS,kBAAMmD,GAAa,IAC5BnC,KAAMA,EACNC,QAASA,EACTC,WAAYA,IAGhBW,eAAA,OACEvB,UAAU,OAEV+C,WAAS,EACTV,UAAW,kBAAMA,EAAU1B,EAAQW,IACnCiB,YAAa,kBAAMA,EAAY5B,EAASW,IACxClB,QAAS,WACO,eAAXO,GACDP,EAAQO,EAASW,IAClBvC,SAAA,CAEHwC,eAAA,OAAKvB,UAAU,WAAUjB,SAAA,CACvBJ,cAAA,OAAKqB,UAAU,kBAAiBjB,SACvB,OAANkD,QAAM,IAANA,OAAM,EAANA,EAAQC,KAAI,SAACxD,EAAMyD,GAAK,OACvBxD,cAACH,EAAI,CAAaE,KAAMA,GAAbyD,QAGfZ,eAAA,OACEvB,UAAU,gBACVI,QAAS,SAAC4C,GACRA,EAAE3C,kBACFwC,GAAa,IACb9D,SAAA,CAEFJ,cAACsE,IAAc,IACdT,GACC7D,cAACM,EAAQ,CACPiB,MAAM,iBACNR,QAAS,kBAAM+C,GAAgB,YAMvC9D,cAAA,OAAKqB,UAAU,aAAYjB,SAAE2C,IAC7B/C,cAAA,OAAAI,SACEJ,cAAA,KAAG+C,MAAOK,EAAKhD,SACbJ,cAACuE,IAAS,QAID,eAAXvC,GAEAhC,cAAA,OAAKqB,UAAU,cAAajB,SAC1BJ,cAAA,KAAGqB,UAAU,mBAAkBjB,SAC7BJ,cAACwE,IAAC,CACAnD,UAAU,mBACVI,QAAS,kBAAMkC,EAAW3B,EAAQW,YA7CrCZ,EAAKY,Q,MCmCH8B,MApDf,SAAe3E,GAAoB,IAAD4E,EAAAC,EAE9BC,EAME9E,EANF8E,MACAjB,EAKE7D,EALF6D,WACAD,EAIE5D,EAJF4D,UACAjC,EAGE3B,EAHF2B,QACAmC,EAEE9D,EAFF8D,YACA3B,EACEnC,EADFmC,WAAUC,EAE4BC,oBAAS,GAAME,EAAAC,YAAAJ,EAAA,GAAhD2B,EAAYxB,EAAA,GAAEyB,EAAezB,EAAA,GACpC,OACErC,cAAA,OAAKqB,UAAU,QAAOjB,SACpBwC,eAAA,OAAKvB,UAAU,cAAajB,SAAA,CAC1BwC,eAAA,OAAKvB,UAAU,eAAcjB,SAAA,CAC3BwC,eAAA,KAAGvB,UAAU,qBAAoBjB,SAAA,CACzB,OAALwE,QAAK,IAALA,OAAK,EAALA,EAAO7B,MACR/C,cAAA,QAAAI,UAAY,OAALwE,QAAK,IAALA,GAAY,QAAPF,EAALE,EAAOC,aAAK,IAAAH,OAAP,EAALA,EAAcI,SAAU,OAEjClC,eAAA,OACEvB,UAAU,0BACVI,QAAS,kBAAMqC,GAAgB,IAAM1D,SAAA,CAErCJ,cAACsE,IAAc,IACdT,GACC7D,cAACM,EAAQ,CACPiB,MAAM,iBACNR,QAAS,kBAAM+C,GAAgB,YAMvC9D,cAAA,OAAKqB,UAAU,4BAA2BjB,SAClC,OAALwE,QAAK,IAALA,GAAY,QAAPD,EAALC,EAAOC,aAAK,IAAAF,OAAP,EAALA,EAAcpB,KAAI,SAACxD,GAAI,OACtBC,cAACyD,EAAI,CAEH1B,KAAMhC,EACNiC,QAAS4C,EAAMjC,GACfgB,WAAYA,EACZC,YAAaA,EACbF,UAAWA,EACXjC,QAASA,EACTQ,WAAYA,GAPPlC,EAAK4C,WAvBqB,OAALiC,QAAK,IAALA,OAAK,EAALA,EAAOjC,O,wBC7BlCoC,EAA4B,CACvC,CACEpC,GAAI,cACJI,MAAO,mDACP8B,MAAO,IAGT,CACElC,GAAI,mBACJI,MAAO,iCACP8B,MAAO,CACL,CACElC,GAAI,mBACJI,MAAO,iCACPO,OAAQ,CAAC,CAAEnD,MAAO,UAAWE,KAAM,mCACnC+C,KAAM,+DACN4B,KAAM,aACNC,MAAO,CACL,CAAEtC,GAAI,mBAAoBuC,WAAW,EAAM7E,KAAM,kBACjD,CAAEsC,GAAI,mBAAoBuC,WAAW,EAAM7E,KAAM,kBACjD,CAAEsC,GAAI,mBAAoBuC,WAAW,EAAM7E,KAAM,oBAGrD,CACEsC,GAAI,kBACJI,MAAO,2BACPO,OAAQ,CAAC,CAAEnD,MAAO,UAAWE,KAAM,mCACnC+C,KAAM,6CACN4B,KAAM,GACNC,MAAO,IAET,CACEtC,GAAI,mBACJI,MAAO,eACPO,OAAQ,CAAC,CAAEnD,MAAO,UAAWE,KAAM,mCACnC+C,KAAM,iCACN4B,KAAM,GACNC,MAAO,CACL,CAAEtC,GAAI,mBAAoBuC,WAAW,EAAO7E,KAAM,gBAGtD,CACEsC,GAAI,mBACJI,MAAO,eACPO,OAAQ,CAAC,CAAEnD,MAAO,UAAWE,KAAM,mCACnC+C,KAAM,iCACN4B,KAAM,aACNC,MAAO,CACL,CAAEtC,GAAI,mBAAoBuC,WAAW,EAAO7E,KAAM,WAClD,CAAEsC,GAAI,mBAAoBuC,WAAW,EAAM7E,KAAM,mBAKzD,CACEsC,GAAI,cACJI,MAAO,iCACP8B,MAAO,CACL,CACElC,GAAI,mBACJI,MAAO,iCACPO,OAAQ,CAAC,CAAEnD,MAAO,UAAWE,KAAM,mCACnC+C,KAAM,+DACN4B,KAAM,aACNC,MAAO,IAET,CACEtC,GAAI,mBACJI,MAAO,iCACPO,OAAQ,CAAC,CAAEnD,MAAO,UAAWE,KAAM,mCACnC+C,KAAM,iFACN4B,KAAM,aACNC,MAAO,IAET,CACEtC,GAAI,iBACJI,MAAO,2BACPO,OAAQ,CAAC,CAAEnD,MAAO,UAAWE,KAAM,mCACnC+C,KAAM,+DACN4B,KAAM,aACNC,MAAO,IAET,CACEtC,GAAI,kBACJI,MAAO,eACPO,OAAQ,CAAC,CAAEnD,MAAO,UAAWE,KAAM,mCACnC+C,KAAM,6CACN4B,KAAM,aACNC,MAAO,OCvFTE,EAAsB,gBAEfC,EAAQ,oBAAAA,IAAAC,YAAA,KAAAD,GAuBlB,OAvBkBE,YAAAF,EAAA,EAAAG,IAAA,iBAAArC,MAAA,eAAAsC,EAAAC,YAAAC,IAAAC,MACnB,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,IAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAWG,OAVKP,EAAoBd,EACtBe,EAAsB,GACtBO,aAAaC,QAAQnB,IACjBa,EAA6BO,KAAKC,MACG,QADET,EAC3CM,aAAaC,QAAQnB,UAAoB,IAAAY,IAAI,IAE/CD,EAASW,YAAOT,IAGhBU,EADAZ,EAASW,YAAOZ,IAEjBK,EAAAS,OAAA,SAEMb,GAAS,wBAAAI,EAAAU,UAAAhB,OASjB,yBAAAJ,EAAAqB,MAAA,KAAAC,YAvBkB,MAuBlB1B,EAvBkB,GA2Bd,SAAe2B,IAAc,OAAAC,EAAAH,MAAC,KAADC,WAGnC,SAAAE,IAAA,OAAAA,EAAAvB,YAAAC,IAAAC,MAHM,SAAAsB,IAAA,IAAAC,EAAA,OAAAxB,IAAAO,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACsB,OAArBc,EAAM,IAAI9B,EAAU+B,EAAAR,OAAA,SACnBO,EAAIH,kBAAgB,wBAAAI,EAAAP,UAAAK,QAC5BJ,MAAA,KAAAC,WACM,SAASJ,EAAyBU,GACvCf,aAAagB,QAAQlC,EAAqBoB,KAAKe,UAAUF,IC8H5CG,MA7Jf,WAAsB,IAADrF,EACSC,mBAAmB,IAAGE,EAAAC,YAAAJ,EAAA,GAA3CkF,EAAM/E,EAAA,GAAEmF,EAASnF,EAAA,GAKA,SAAAoF,IAGvB,OAHuBA,EAAAhC,YAAAC,IAAAC,MAAxB,SAAAC,IAAA,IAAAwB,EAAA,OAAA1B,IAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACiCW,IAAiB,KAAD,EAAzCK,EAAgBlB,EAAAwB,KACtBF,EAAUJ,GAAQ,wBAAAlB,EAAAU,UAAAhB,QACnBiB,MAAA,KAAAC,WAPD9F,qBAAU,YAEH,WAEiByG,EAAAZ,MAAC,KAADC,WAHtBa,KACC,IAKF,IAAA5D,EACmC5B,mBAAS,CAC3CH,QAAS,EACT4F,OAAQ,IACR5D,EAAA1B,YAAAyB,EAAA,GAHK8D,EAAU7D,EAAA,GAAE8D,EAAa9D,EAAA,GAc1BL,EAAa,SAAC3B,EAAiB4F,GACnC,IAAMG,EAAaX,EAAOY,WAAU,SAACjI,GAAY,OAAKA,EAAK4C,KAAOX,KAClE,KAAI+F,EAAa,GAAjB,CAEA,IAAME,EAAcxB,YAAOW,GACrBvC,EAAQoD,EAAeF,GAAYlD,MAEnCqD,EAAYrD,EAAMmD,WAAU,SAACjI,GAAI,OAAKA,EAAK4C,KAAOiF,KACpDM,EAAY,IAEhBrD,EAAMsD,OAAOD,EAAW,GACxBV,EAAUS,MAGNhG,EAAa,SAACD,EAAiB4F,EAAgB7F,GACnD,IAAMgG,EAAaX,EAAOY,WAAU,SAACjI,GAAI,OAAKA,EAAK4C,KAAOX,KAC1D,KAAI+F,EAAa,GAAjB,CAEA,IAAME,EAAcxB,YAAOW,GAGrBc,EAFQD,EAAeF,GAAYlD,MAEjBmD,WAAU,SAACjI,GAAI,OAAKA,EAAK4C,KAAOiF,KACpDM,EAAY,IAEhBD,EAAeF,GAAYlD,MAAMqD,GAAanG,EAE9CyF,EAAUS,MAGNxG,EAAU,SAACO,EAAiB4F,GAAqB,IAADQ,EAAAC,EAC9CC,EAAmBlB,EAAOY,WAC9B,SAACjI,GAAY,OAAKA,EAAK4C,KAAOX,KAEhC,KAAIsG,EAAmB,GAAvB,CAEA,IAAMC,EAA0C,QAA3BH,EAAGhB,EAAOkB,UAAiB,IAAAF,GAAO,QAAPC,EAAxBD,EAA0BvD,aAAK,IAAAwD,OAAP,EAAxBA,EAAiCL,WACvD,SAACjI,GAAI,OAAKA,EAAK4C,KAAOiF,KAExB,KAAIW,EAAkB,GAAtB,CAEA,IAAMC,EAAmBpB,EAAOY,WAC9B,SAACjI,GAAY,OAAiB,gBAAZA,EAAK4C,MAEzB,KAAI6F,EAAmB,IACC,GAApBA,EAAJ,CAEA,IAAMP,EAAcxB,YAAOW,GACrBqB,EAAaR,EAAeK,GAAkBzD,MAAM0D,GAC1DN,EAAeO,GAAkB3D,MAAMsD,OACrCF,EAAeO,GAAkB3D,MAAMC,OACvC,EACA2D,GAEFjB,EAAUS,GAEVH,EAAc,CACZ9F,QAAS,EACT4F,OAAQ,QAINlE,EAAY,SAAC1B,EAAiB4F,GAAoB,IAADc,EAAAC,EAC/CL,EAAmBlB,EAAOY,WAC9B,SAACjI,GAAY,OAAKA,EAAK4C,KAAOX,KAEhC,KAAIsG,EAAmB,IACT,eAAXtG,EAAH,CAEA,IAAMuG,EAA0C,QAA3BG,EAAGtB,EAAOkB,UAAiB,IAAAI,GAAO,QAAPC,EAAxBD,EAA0B7D,aAAK,IAAA8D,OAAP,EAAxBA,EAAiCX,WACvD,SAACjI,GAAI,OAAKA,EAAK4C,KAAOiF,KAExB,KAAIW,EAAkB,GAAtB,CAEA,IAAMC,EAAmBpB,EAAOY,WAC9B,SAACjI,GAAY,OAAiB,gBAAZA,EAAK4C,MAEzB,KAAI6F,EAAmB,IACC,GAApBA,EAAJ,CAEA,IAAMP,EAAcxB,YAAOW,GACrBqB,EAAaR,EAAeK,GAAkBzD,MAAM0D,GAE1DN,EAAeK,GAAkBzD,MAAMsD,OAAOI,EAAiB,GAC/DN,EAAeO,GAAkB3D,MAAMsD,OACrCF,EAAeO,GAAkB3D,MAAMC,OACvC,EACA2D,GAEFjB,EAAUS,GAEVH,EAAc,CACZ9F,QAAS,EACT4F,OAAQ,QAINhE,EAAc,SAAC5B,EAAiB4F,GAChCC,EAAWD,SAAWA,GAC1BE,EAAc,CACZ9F,QAASA,EACT4F,OAAQA,KAQZ,OAJA5G,qBAAU,WACR0F,EAAyBU,KACxB,CAACA,IAGFxE,eAAA,OAAKvB,UAAU,MAAKjB,SAAA,CAClBJ,cAAA,OAAKqB,UAAU,UAASjB,SACtBJ,cAAA,MAAAI,SAAI,0BAENJ,cAAA,OAAKqB,UAAU,uBAAsBjB,SACnCJ,cAAA,OAAKqB,UAAU,aAAYjB,SACxBgH,EAAO7D,KAAI,SAACxD,GAAI,OACfC,cAACyE,EAAK,CAEJG,MAAO7E,EACP6I,YAAa,kBAhIL,SAAC5G,GACnB,IAAM+F,EAAaX,EAAOY,WAAU,SAACjI,GAAY,OAAKA,EAAK4C,KAAOX,KAClE,KAAI+F,EAAa,GAAjB,CAEA,IAAME,EAAcxB,YAAOW,GAC3Ba,EAAeE,OAAOJ,EAAY,GAClCP,EAAUS,IA0HmBW,CAAY7I,EAAK4C,KACpCgB,WAAYA,EACZD,UAAWA,EACXjC,QAASA,EACTmC,YAAaA,EACb3B,WAAYA,GAPPlC,EAAK4C,eC7ITkG,MAJf,WACE,OAAO7I,cAACuH,EAAS,KCEnBuB,IAASC,OACP/I,cAACgJ,IAAMC,WAAU,CAAA7I,SACfJ,cAAC6I,EAAG,MAEN5H,SAASiI,eAAe,W","file":"static/js/main.c7ba9231.chunk.js","sourcesContent":["import React from \"react\";\nimport { ILabel } from \"../../Interfaces/Kanban\";\ninterface ChipProps {\n  item: ILabel;\n  removeLabel?: (label: ILabel) => void;\n}\nexport default function Chip(props: ChipProps) {\n  const { item, } = props;\n  return (\n    <label style={{ backgroundColor: item.color, color: \"#fff\" }}>\n      {item.text}\n    </label>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\n\nimport \"./Dropdown.css\";\n\nfunction Dropdown(props: any) {\n  const dropdownRef: any = useRef();\n\n  const handleClick = (event: any) => {\n    if (\n      dropdownRef &&\n      !dropdownRef.current?.contains(event.target) &&\n      props.onClose\n    )\n      props.onClose();\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={`dropdown custom-scroll ${props.class ? props.class : \"\"}`}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Dropdown;\n","import React from \"react\";\n\nimport \"./Modal.css\";\n\nfunction Modal(props: any) {\n  return (\n    <div\n      className=\"modal\"\n      onClick={() => (props.onClose ? props.onClose() : \"\")}\n    >\n      <div\n        className=\"modal-content custom-scroll\"\n        onClick={(event) => event.stopPropagation()}\n      >\n        {props.children}\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import \"./CustomInput.css\";\ninterface CustomInputProps {\n  text: string;\n  onSubmit: (value: string) => void;\n  displayClass?: string;\n  editClass?: string;\n  placeholder?: string;\n  defaultValue?: string;\n  buttonText?: string;\n}\nfunction CustomInput(props: CustomInputProps) {\n  const {\n    text,\n    displayClass,\n  } = props;\n\n  return (\n    <div className=\"custom-input\">\n        <p\n          className={`custom-input-display ${displayClass ? displayClass : \"\"}`}\n        >\n          {text}\n        </p>\n    </div>\n  );\n}\n\nexport default CustomInput;\n","import React, { useEffect, useState } from \"react\";\nimport { List, Tag, Type } from \"react-feather\";\nimport Modal from \"../../Modal/Modal\";\nimport CustomInput from \"../../CustomInput/CustomInput\";\n\nimport \"./CardInfo.css\";\nimport { ICard } from \"../../../Interfaces/Kanban\";\nimport Chip from \"../../Common/Chip\";\ninterface CardInfoProps {\n  onClose: () => void;\n  card: ICard;\n  boardId: number;\n  updateCard: (boardId: number, cardId: number, card: ICard) => void;\n}\nfunction CardInfo(props: CardInfoProps) {\n  const { onClose, card, boardId, updateCard } = props;\n  const [cardValues, setCardValues] = useState<ICard>({\n    ...card,\n  });\n\n  const updateTitle = (value: string) => {\n    setCardValues({ ...cardValues, title: value });\n  };\n\n  const updateDesc = (value: string) => {\n    setCardValues({ ...cardValues, desc: value });\n  };\n\n  useEffect(() => {\n    console.log(boardId);\n    if (updateCard) updateCard(boardId, cardValues.id, cardValues);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cardValues]);\n\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"cardinfo\">\n        <div className=\"cardinfo-box\">\n          <div className=\"cardinfo-box-title\">\n            <Type />\n            <p>Title</p>\n          </div>\n          <CustomInput\n            defaultValue={cardValues.title}\n            text={cardValues.title}\n            placeholder=\"Enter Title\"\n            onSubmit={updateTitle}\n          />\n        </div>\n\n        <div className=\"cardinfo-box\">\n          <div className=\"cardinfo-box-title\">\n            <List />\n            <p>Description</p>\n          </div>\n          <CustomInput\n            defaultValue={cardValues.desc}\n            text={cardValues.desc || \"\"}\n            placeholder=\"Enter description\"\n            onSubmit={updateDesc}\n          />\n        </div>\n\n        <div className=\"cardinfo-box\">\n          <div className=\"cardinfo-box-title\">\n            <Tag />\n            <p>Labels</p>\n          </div>\n          <div className=\"cardinfo-box-labels\">\n            {cardValues.labels?.map((item, index) => (\n              <Chip key={index} item={item} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default CardInfo;\n","import React, { useState } from \"react\";\nimport { AlignLeft,X,MoreHorizontal } from \"react-feather\";\nimport { ICard } from \"../../Interfaces/Kanban\";\nimport Chip from \"../Common/Chip\";\nimport Dropdown from \"../Dropdown/Dropdown\";\n\nimport \"./Card.css\";\nimport CardInfo from \"./CardInfo/CardInfo\";\ninterface CardProps {\n  card: ICard;\n  boardId: number;\n  removeCard: (boardId: number, cardId: number) => void;\n  onDragEnd: (boardId: number, cardId: number) => void;\n  onClick: (boardId: number, cardId: number) => void;\n  onDragEnter: (boardId: number, cardId: number) => void;\n  updateCard: (boardId: number, cardId: number, card: ICard) => void;\n}\nfunction Card(props: CardProps) {\n  const { card, boardId, onDragEnd, onClick,removeCard,onDragEnter, updateCard } =\n    props;\n  const { id, title, desc, labels } = card;\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      {showModal && (\n        <CardInfo\n          onClose={() => setShowModal(false)}\n          card={card}\n          boardId={boardId}\n          updateCard={updateCard}\n        />\n      )}\n      <div\n        className=\"card\"\n        key={card.id}\n        draggable\n        onDragEnd={() => onDragEnd(boardId,id)}\n        onDragEnter={() => onDragEnter(boardId, id)}\n        onClick={() => {\n          if(boardId != 1651319512266.0001){\n            onClick(boardId, id);\n        }}}\n      >\n        <div className=\"card-top\">\n          <div className=\"card-top-labels\">\n            {labels?.map((item, index) => (\n              <Chip key={index} item={item} />\n            ))}\n          </div>\n          <div\n            className=\"card-top-more\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setShowModal(true);\n            }}\n          >\n            <MoreHorizontal />\n            {showDropdown && (\n              <Dropdown\n                class=\"board-dropdown\"\n                onClose={() => setShowDropdown(false)}\n              >\n              </Dropdown>\n            )}\n          </div>\n        </div>\n        <div className=\"card-title\">{title}</div>\n        <div>\n          <p title={desc}>\n            <AlignLeft />\n          </p>\n        </div>\n        { \n          boardId == 1651319512266.0001 \n          &&\n          <div className=\"card-footer\">\n            <p className=\"card-footer-item\">\n              <X \n                className=\"card-footer-icon\" \n                onClick={() => removeCard(boardId,id)}\n              />\n            </p>\n          </div>\n        }\n      </div>\n    </>\n  );\n}\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport { MoreHorizontal } from \"react-feather\";\n\nimport Card from \"../Card/Card\";\nimport Dropdown from \"../Dropdown/Dropdown\";\n\nimport \"./Board.css\";\nimport { IBoard, ICard } from \"../../Interfaces/Kanban\";\n\ninterface BoardProps {\n  board: IBoard;\n  removeBoard: (boardId: number) => void;\n  removeCard: (boardId: number, cardId: number) => void;\n  onDragEnd: (boardId: number, cardId: number) => void;\n  onClick: (boardId: number, cardId: number) => void;\n  onDragEnter: (boardId: number, cardId: number) => void;\n  updateCard: (boardId: number, cardId: number, card: ICard) => void;\n}\n\nfunction Board(props: BoardProps) {\n  const {\n    board,\n    removeCard,\n    onDragEnd,\n    onClick,\n    onDragEnter,\n    updateCard,\n  } = props;\n  const [showDropdown, setShowDropdown] = useState(false);\n  return (\n    <div className=\"board\">\n      <div className=\"board-inner\" key={board?.id}>\n        <div className=\"board-header\">\n          <p className=\"board-header-title\">\n            {board?.title}\n            <span>{board?.cards?.length || 0}</span>\n          </p>\n          <div\n            className=\"board-header-title-more\"\n            onClick={() => setShowDropdown(true)}\n          >\n            <MoreHorizontal />\n            {showDropdown && (\n              <Dropdown\n                class=\"board-dropdown\"\n                onClose={() => setShowDropdown(false)}\n              >\n              </Dropdown>\n            )}\n          </div>\n        </div>\n        <div className=\"board-cards custom-scroll\">\n          {board?.cards?.map((item) => (\n            <Card\n              key={item.id}\n              card={item}\n              boardId={board.id}\n              removeCard={removeCard}\n              onDragEnter={onDragEnter}\n              onDragEnd={onDragEnd}\n              onClick={onClick}\n              updateCard={updateCard}\n            />\n          ))}\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","import { IBoard } from \"../Interfaces/Kanban\";\n\nexport const ApiMockResponse: IBoard[] = [\n  {\n    id: 1651319512266.0001,\n    title: \"今日のプログラム\",\n    cards: [\n    ]\n  },\n  {\n    id: 1651319512267.7095,\n    title: \"上半身運動\",\n    cards: [\n      {\n        id: 1651319552926.0933,\n        title: \"腕を上げる\",\n        labels: [{ color: \"#cf61a1\", text: \"上半身運動\" }],\n        desc: \"腕を上げる動作を行う\",\n        date: \"2023-09-03\",\n        tasks: [\n          { id: 1651319625559.8025, completed: true, text: \"Task1_subtask1\" },\n          { id: 1651319629650.8945, completed: true, text: \"Task1_subtask2\" },\n          { id: 1651319633774.9905, completed: true, text: \"Task1_subtask3\" },\n        ],\n      },\n      {\n        id: 1651319568365.593,\n        title: \"首を回す\",\n        labels: [{ color: \"#cf61a1\", text: \"上半身運動\" }],\n        desc: \"首を回すを行う\",\n        date: \"\",\n        tasks: [],\n      },\n      {\n        id: 1651319672685.5078,\n        title: \"腹筋\",\n        labels: [{ color: \"#cf61a1\", text: \"上半身運動\" }],\n        desc: \"腹筋を行う\",\n        date: \"\",\n        tasks: [\n          { id: 1651319728301.3855, completed: false, text: \"restore db\" },\n        ],\n      },\n      {\n        id: 1651319680948.0479,\n        title: \"背筋\",\n        labels: [{ color: \"#cf61a1\", text: \"上半身運動\" }],\n        desc: \"背筋を行う\",\n        date: \"2022-05-04\",\n        tasks: [\n          { id: 1651319820180.9648, completed: false, text: \"GraphQl\" },\n          { id: 1651319833779.3252, completed: true, text: \"Restful API\" },\n        ],\n      }\n    ],\n  },\n  {\n    id: 1651319512268.0000,\n    title: \"下半身運動\",\n    cards: [\n      {\n        id: 1651319677070.0733,\n        title: \"立ち上がる\",\n        labels: [{ color: \"#0067C0\", text: \"下半身運動\" }],\n        desc: \"立ち上がる動作を行う\",\n        date: \"2022-05-06\",\n        tasks: [],\n      },\n      {\n        id: 1651319677070.0734,\n        title: \"スクワット\",\n        labels: [{ color: \"#0067C0\", text: \"下半身運動\" }],\n        desc: \"足を上げ下げする行動を行う\",\n        date: \"2022-05-06\",\n        tasks: [],\n      },\n      {\n        id: 1651319677070.0101,\n        title: \"足首回す\",\n        labels: [{ color: \"#0067C0\", text: \"下半身運動\" }],\n        desc: \"足首を回す動作を行う\",\n        date: \"2022-05-06\",\n        tasks: [],\n      },\n      {\n        id: 1651319677070.0110,\n        title: \"歩く\",\n        labels: [{ color: \"#0067C0\", text: \"下半身運動\" }],\n        desc: \"歩く動作を行う\",\n        date: \"2022-05-06\",\n        tasks: [],\n      },\n    ],\n  },\n];\n","import { ApiMockResponse } from \"../ApiMockData/dummyData\";\nimport { IBoard } from \"../Interfaces/Kanban\";\n\nconst LocalStorageKeyName = \"kanban-boards\";\n//Data Layer\nexport class BoardAPI {\n  async fetchBoardList(): Promise<IBoard[]> {\n    const apiData: IBoard[] = ApiMockResponse;\n    let BoardList: IBoard[] = [];\n    if (localStorage.getItem(LocalStorageKeyName)) {\n      const localStorageData: IBoard[] = JSON.parse(\n        localStorage.getItem(LocalStorageKeyName) ?? \"\",\n      );\n      BoardList = [...localStorageData];\n    } else {\n      BoardList = [...apiData];\n      updateLocalStorageBoards(BoardList);\n    }\n\n    return BoardList;\n    //TODO:integrate API module when got API from backend team :)\n    /*\n      private readonly api = new Api();//it will have all Restful verbs functions\n      return axios.get(`ENDPOINT_GOES_HERE`)\n      .then((res: { data: any; }) => {\n        return res.data;\n      });\n      */\n  }\n} \n\n//Business Layer\nexport async function fetchBoardList(): Promise<IBoard[]> {\n  const api = new BoardAPI();\n  return api.fetchBoardList();\n}\nexport function updateLocalStorageBoards(boards: IBoard[]) {\n  localStorage.setItem(LocalStorageKeyName, JSON.stringify(boards));\n}\n","import React, { useEffect, useState } from \"react\";\nimport Board from \"../Components/Board/Board\";\nimport \"./Dashboard.css\";\nimport { ICard, IBoard } from \"../Interfaces/Kanban\";\nimport { fetchBoardList, updateLocalStorageBoards } from \"../Helper/APILayers\";\n\nfunction Dashboard() {\n  const [boards, setBoards] = useState<IBoard[]>([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    const boards: IBoard[] = await fetchBoardList();\n    setBoards(boards);\n  }\n  const [targetCard, setTargetCard] = useState({\n    boardId: 0,\n    cardId: 0,\n  });\n\n  const removeBoard = (boardId: number) => {\n    const boardIndex = boards.findIndex((item: IBoard) => item.id === boardId);\n    if (boardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    tempBoardsList.splice(boardIndex, 1);\n    setBoards(tempBoardsList);\n  };\n\n  const removeCard = (boardId: number, cardId: number) => {\n    const boardIndex = boards.findIndex((item: IBoard) => item.id === boardId);\n    if (boardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    const cards = tempBoardsList[boardIndex].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cardId);\n    if (cardIndex < 0) return;\n\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoardsList);\n  };\n\n  const updateCard = (boardId: number, cardId: number, card: ICard) => {\n    const boardIndex = boards.findIndex((item) => item.id === boardId);\n    if (boardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    const cards = tempBoardsList[boardIndex].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cardId);\n    if (cardIndex < 0) return;\n\n    tempBoardsList[boardIndex].cards[cardIndex] = card;\n\n    setBoards(tempBoardsList);\n  };\n\n  const onClick = (boardId: number, cardId: number) =>  {\n    const sourceBoardIndex = boards.findIndex(\n      (item: IBoard) => item.id === boardId,\n    );\n    if (sourceBoardIndex < 0) return;\n\n    const sourceCardIndex = boards[sourceBoardIndex]?.cards?.findIndex(\n      (item) => item.id === cardId,\n    );\n    if (sourceCardIndex < 0) return;\n\n    const targetBoardIndex = boards.findIndex(\n      (item: IBoard) => item.id === 1651319512266.0001\n    );\n    if (targetBoardIndex < 0) return;\n    if (targetBoardIndex != 0) return;\n\n    const tempBoardsList = [...boards];\n    const sourceCard = tempBoardsList[sourceBoardIndex].cards[sourceCardIndex];\n    tempBoardsList[targetBoardIndex].cards.splice(\n      tempBoardsList[targetBoardIndex].cards.length,\n      0,\n      sourceCard,\n    );\n    setBoards(tempBoardsList);\n\n    setTargetCard({\n      boardId: 0,\n      cardId: 0,\n    });\n  };\n\n  const onDragEnd = (boardId: number, cardId: number) => {\n    const sourceBoardIndex = boards.findIndex(\n      (item: IBoard) => item.id === boardId,\n    );\n    if (sourceBoardIndex < 0) return;\n    if(boardId != 1651319512266.0001) return;\n\n    const sourceCardIndex = boards[sourceBoardIndex]?.cards?.findIndex(\n      (item) => item.id === cardId,\n    );\n    if (sourceCardIndex < 0) return;\n\n    const targetBoardIndex = boards.findIndex(\n      (item: IBoard) => item.id === 1651319512266.0001\n    );\n    if (targetBoardIndex < 0) return;\n    if (targetBoardIndex != 0) return;\n\n    const tempBoardsList = [...boards];\n    const sourceCard = tempBoardsList[sourceBoardIndex].cards[sourceCardIndex];\n    //ここでカード移動する。\n    tempBoardsList[sourceBoardIndex].cards.splice(sourceCardIndex, 1);\n    tempBoardsList[targetBoardIndex].cards.splice(\n      tempBoardsList[targetBoardIndex].cards.length,\n      0,\n      sourceCard,\n    );\n    setBoards(tempBoardsList);\n\n    setTargetCard({\n      boardId: 0,\n      cardId: 0,\n    });\n  };\n\n  const onDragEnter = (boardId: number, cardId: number) => {\n    if (targetCard.cardId === cardId) return;\n    setTargetCard({\n      boardId: boardId,\n      cardId: cardId,\n    });\n  };\n\n  useEffect(() => {\n    updateLocalStorageBoards(boards);\n  }, [boards]);\n  \n  return (\n    <div className=\"app\">\n      <div className=\"app-nav\">\n        <h1>Trello Kanban Board</h1>\n      </div>\n      <div className=\"app-boards-container\">\n        <div className=\"app-boards\">\n          {boards.map((item) => (\n            <Board\n              key={item.id}\n              board={item}\n              removeBoard={() => removeBoard(item.id)}\n              removeCard={removeCard}\n              onDragEnd={onDragEnd}\n              onClick={onClick}\n              onDragEnter={onDragEnter}\n              updateCard={updateCard}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import Dashboard from \"./Home/Dashboard\";\n\nfunction App() {\n  return <Dashboard />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}